name: Clair Scan
on:
  push:
  workflow_dispatch:
  
env: 
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: build local container
        uses: docker/build-push-action@v2
        with:
          tags: marceloluiz1/nodeapp:1.0
          push: false
          load: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        id: scan
        with:
          image-ref: 'marceloluiz1/nodeapp:1.0'
          output: 'trivy-results.sarif'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          
      - name: Post Result
        run: |
          export SLACK_MESSAGE=${{ steps.scan.outputs.stdout }} 
          curl -X POST --data-urlencode "payload={\"channel\": \"#workflows-notifications\", \"username\": \"webhookbot\", \"text\": \"${SLACK_MESSAGE}\", \"icon_emoji\": \":sunny:\"}" $SLACK_WEBHOOK

        
#           - curl -X POST --data-urlencode 'payload={"text":"Test slack integration via yaml"}' ${{SLACK_WEBHOOK}}

        # - name: Scan image
      #   run: |
      #     docker run -d --name db arminc/clair-db
      #     sleep 15 # wait for db to come up
      #     docker run -p 6060:6060 --link db:postgres -d --name clair arminc/clair-local-scan
      #     sleep 1
      #     DOCKER_GATEWAY=$(docker network inspect bridge --format "{{range .IPAM.Config}}{{.Gateway}}{{end}}")
      #     wget -qO clair-scanner https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64 && chmod +x clair-scanner
      #     ./clair-scanner --ip="$DOCKER_GATEWAY" marceloluiz1/nodeapp:1.0 || exit 0


          
